/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.nio.file.FileSystemLoopException;
import java.util.ArrayList;

import org.w3c.dom.Node;

import files.XMLOperations;
import funcionalities.Optimization;
import jMetal.AntiSpamFilterAutomaticConfiguration;
import jMetal.OptimizationProcess;
import objects.Problem;
import objects.Variable;

/**
 *
 * @author Ricardo
 */
public class OptimizationPanel extends javax.swing.JPanel {

	/**
	 * Creates new form OptimizePanel
	 */
	public OptimizationPanel() {
		initComponents();
	}



	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optimizationTitle = new javax.swing.JLabel();
        problemLabel = new javax.swing.JLabel();
        problemCB = new javax.swing.JComboBox<>();
        algorithmLabel = new javax.swing.JLabel();
        algorithmCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        variablesTable = new javax.swing.JTable();
        variaveisTitleLabel = new javax.swing.JLabel();
        fitnessName = new javax.swing.JTextField();
        fitnessNameLabel = new javax.swing.JLabel();
        fitnessJarLabel = new javax.swing.JLabel();
        fitnessJarFile = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        optimizeButton = new javax.swing.JButton();
        manualConfigRB = new javax.swing.JRadioButton();
        automaticConfigRB = new javax.swing.JRadioButton();

        setPreferredSize(new java.awt.Dimension(660, 628));

        optimizationTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        optimizationTitle.setText("Optimization");

        problemLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        problemLabel.setText("Problem");

        algorithmLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        algorithmLabel.setText("Algorithm");

        //algorithmCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        variablesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "JAR File"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(variablesTable);

        variaveisTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        variaveisTitleLabel.setText("Fitness Variables");

        fitnessNameLabel.setText("Name");

        fitnessJarLabel.setText("JAR");

        addButton.setText("Add");

        optimizeButton.setText("Done");

        manualConfigRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        manualConfigRB.setText("Manual Configuration");

        automaticConfigRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        automaticConfigRB.setText("Automatic Configuration");
        
        
    	/*  **************************** METODOS CRIADOS **************************** */
        
        File[] fileList = optimization.searchFiles();

		for (File f: fileList) {
			problemCB.addItem(f.getName());
			//metodoTemporario();
		}
		
		for(String algorithm : optimizationProcess.getAlgorithmsDouble()) {
			algorithmCB.addItem(algorithm);
		}
				
		
		optimizeButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(problemCB.getSelectedItem());			
				//ALTERAR ISTO PARA UM METODO MUITO CODIGO
				// isto recebe o ficheiro selecionado e guarda os valores nas variaveis
				//
				//
		    //  \/

				try {
					ArrayList variableArray = new ArrayList();
					
					//model.setRowCount(0);
					File file = (File) problemCB.getSelectedItem();
					Node[] xmlFile = xmlOperations.readXML(file);
					String name = xmlFile[0].getTextContent().toString();
					String description = xmlFile[1].getTextContent().toString();
					String waitTime = xmlFile[2].getTextContent().toString();
					
			

					String variableName = "";
					String variableType = "";
					String variableMinimumValue = "";
					String variableMaximumValue = "";
					String invalidValue = "";
					int variableCounter = 0;

					for(Node n : xmlFile) {

						if(n.getNodeName().equals("variable") )	{
							variableCounter++;
							for(int i=0; i < n.getChildNodes().getLength(); i++) {
								System.out.println(n.getChildNodes().item(i).getTextContent());
								// model.addElement(n.getChildNodes().item(i).getTextContent());
								if(n.getChildNodes().item(i).getNodeName().equals("name"))
									variableName = n.getChildNodes().item(i).getTextContent();
								if(n.getChildNodes().item(i).getNodeName().equals("type"))
									variableType = n.getChildNodes().item(i).getTextContent();
								if(n.getChildNodes().item(i).getNodeName().equals("minimumValue"))
									variableMinimumValue = n.getChildNodes().item(i).getTextContent();
								if(n.getChildNodes().item(i).getNodeName().equals("maximumValue"))
									variableMaximumValue = n.getChildNodes().item(i).getTextContent();
							}
							variable = new Variable(variableName,variableType,Integer.parseInt(variableMinimumValue),Integer.parseInt(variableMaximumValue));
							variableList.add(variable);
						}

						if(n.getNodeName().equals("invalidValues"))
							invalidValue = n.getTextContent();

					}
					
					problem = new Problem(name, description, Integer.parseInt(waitTime), Integer.parseInt(invalidValue), variableCounter, variableList);
					antiSpamFilter.init(problem);
					
				} catch (Exception e1) {
					// TODO: handle exception
				}
				
				System.out.println( problem.getDescription() );
			}
		});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(manualConfigRB)
                .addGap(90, 90, 90)
                .addComponent(automaticConfigRB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(problemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(variaveisTitleLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(algorithmCB, 0, 279, Short.MAX_VALUE)
                    .addComponent(problemCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(optimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fitnessJarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fitnessJarFile))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fitnessNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fitnessName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(optimizationTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(optimizationTitle)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(automaticConfigRB)
                    .addComponent(manualConfigRB))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(problemCB, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(problemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithmCB, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(variaveisTitleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fitnessNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fitnessName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fitnessJarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fitnessJarFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addButton)
                        .addGap(63, 63, 63)
                        .addComponent(optimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))))
        );
    }// </editor-fold>//GEN-END:initComponents
	


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> algorithmCB;
    private javax.swing.JLabel algorithmLabel;
    private javax.swing.JRadioButton automaticConfigRB;
    private javax.swing.JTextField fitnessJarFile;
    private javax.swing.JLabel fitnessJarLabel;
    private javax.swing.JTextField fitnessName;
    private javax.swing.JLabel fitnessNameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton manualConfigRB;
    private javax.swing.JLabel optimizationTitle;
    private javax.swing.JButton optimizeButton;
    private javax.swing.JComboBox<String> problemCB;
    private javax.swing.JLabel problemLabel;
    private javax.swing.JTable variablesTable;
    private javax.swing.JLabel variaveisTitleLabel;
    // End of variables declaration//GEN-END:variables
	private Optimization optimization = new Optimization();
	private XMLOperations xmlOperations = new XMLOperations();
	private AntiSpamFilterAutomaticConfiguration antiSpamFilter = new AntiSpamFilterAutomaticConfiguration();
	private Problem problem;
	private OptimizationProcess optimizationProcess = new OptimizationProcess();
	private Variable variable;
	private ArrayList<Variable> variableList = new ArrayList<Variable>();

}
