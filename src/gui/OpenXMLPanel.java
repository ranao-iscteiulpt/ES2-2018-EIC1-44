/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.DirectoryNotEmptyException;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

import org.omg.PortableInterceptor.DISCARDING;
import org.w3c.dom.Node;

import files.XMLOperations;

/**
 *
 * @author Ricardo
 */
public class OpenXMLPanel extends javax.swing.JPanel {

	private File file;
	private File loadFile;
	XMLOperations xmlOperations = new XMLOperations();
	public int variableCounter = 0;

	/**
	 * Creates new form OpenXMLPanel
	 */

	public OpenXMLPanel(File jfc) {
		this.loadFile = jfc;
		initComponents();
		receiveData(jfc);
	}

	public void receiveData (File jfc) {
		try {
			model.setRowCount(0);
			file = jfc;
			//System.out.println(file);
			Node[] xmlFile = xmlOperations.readXML(file);
			nameTF.setText( xmlFile[0].getTextContent().toString());
			descriptionTA.setText(xmlFile[1].getTextContent().toString());
			waitTimeTF.setText(xmlFile[2].getTextContent().toString());

			for(Node n : xmlFile) {

				if(n.getNodeName().equals("variable") )	{

					String variableName = "";
					String variableType = "";
					String variableMinimumValue = "";
					String variableMaximumValue = "";


					for(int i=0; i < n.getChildNodes().getLength(); i++) {
						variableCounter++;
						if(n.getChildNodes().item(i).getNodeName().equals("name"))
							variableName = n.getChildNodes().item(i).getTextContent();
						if(n.getChildNodes().item(i).getNodeName().equals("type"))
							variableType = n.getChildNodes().item(i).getTextContent();
						if(n.getChildNodes().item(i).getNodeName().equals("minimumValue"))
							variableMinimumValue = n.getChildNodes().item(i).getTextContent();
						if(n.getChildNodes().item(i).getNodeName().equals("maximumValue"))
							variableMaximumValue = n.getChildNodes().item(i).getTextContent();
					}

					model.addRow(new Object[]{variableName,variableType,variableMinimumValue,variableMaximumValue});
				}

				if(n.getNodeName().equals("invalidValues"))
					invalidValueTF.setText(n.getTextContent());
				if(n.getNodeName().equals("firstInvalidValue"))
					invalidValueTF.setText(n.getTextContent());
				if(n.getNodeName().equals("secondInvalidValue"))
					secondInvalidValueTextField.setText(n.getTextContent());

			}
		} catch (Exception e) {
			//System.out.println("falhou");
		}
		//lblInvalidText.setText(xmlFile[xmlFile.length]);
	}



	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		waitTimeLabel = new javax.swing.JLabel();
		invalidValueLabel = new javax.swing.JLabel();
		nameLabel = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		variablesTable = new javax.swing.JTable();
		variableNameLabel = new javax.swing.JLabel();
		variableNameTF = new javax.swing.JTextField();
		varMinLabel = new javax.swing.JLabel();
		variableMinValueTF = new javax.swing.JTextField();
		varMaxLabel = new javax.swing.JLabel();
		variableMaxValueTF = new javax.swing.JTextField();
		varTypeLabel = new javax.swing.JLabel();
		generateButton = new javax.swing.JButton();
		descriptionLabel = new javax.swing.JLabel();
		editWaitTimeButton = new javax.swing.JButton();
		editNameButton = new javax.swing.JButton();
		editInvalidValueButton = new javax.swing.JButton();
		editDescriptionButton = new javax.swing.JButton();
		nameTF = new javax.swing.JTextField();
		invalidValueTF = new javax.swing.JTextField();
		waitTimeTF = new javax.swing.JTextField();
		jScrollPane2 = new javax.swing.JScrollPane();
		descriptionTA = new javax.swing.JTextArea();
		quantityLabel = new javax.swing.JLabel();
		quantityTextField = new javax.swing.JTextField();
		typeComboBox = new javax.swing.JComboBox<>();
		saveButton = new javax.swing.JButton();
		toLabel = new javax.swing.JLabel();
		secondInvalidValueTextField = new javax.swing.JTextField();
		removeButton = new javax.swing.JButton();
		editVariables = new javax.swing.JButton();

		descriptionTA.setEditable(false);
		descriptionTA.setBackground(new Color(240,240,240));

		waitTimeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		waitTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		waitTimeLabel.setText("Wait Time");

		invalidValueLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		invalidValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		invalidValueLabel.setText("Invalid Value");

		nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		nameLabel.setText("Name");

		model = new javax.swing.table.DefaultTableModel() {
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};

		variablesTable.setModel(model);
		model.addColumn("Name");
		model.addColumn("Type");
		model.addColumn("Min Value");
		model.addColumn("Max Value");
		jScrollPane1.setViewportView(variablesTable);

		variableNameLabel.setText("Name");

		variableNameTF.setEditable(false);

		varMinLabel.setText("Min Value");

		variableMinValueTF.setEditable(false);
		variableMinValueTF.setName(""); // NOI18N

		varMaxLabel.setText("Max Value");

		variableMaxValueTF.setEditable(false);

		varTypeLabel.setText("Type");

		generateButton.setText("Generate");

		descriptionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		descriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		descriptionLabel.setText("Description");

		editWaitTimeButton.setForeground(new java.awt.Color(51, 102, 255));
		editWaitTimeButton.setText("Edit");
		editWaitTimeButton.setBorderPainted(false);
		editWaitTimeButton.setContentAreaFilled(false);
		editWaitTimeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		editNameButton.setForeground(new java.awt.Color(51, 102, 255));
		editNameButton.setText("Edit");
		editNameButton.setBorderPainted(false);
		editNameButton.setContentAreaFilled(false);
		editNameButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		editInvalidValueButton.setForeground(new java.awt.Color(51, 102, 255));
		editInvalidValueButton.setText("Edit");
		editInvalidValueButton.setBorderPainted(false);
		editInvalidValueButton.setContentAreaFilled(false);
		editInvalidValueButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		editDescriptionButton.setForeground(new java.awt.Color(51, 102, 255));
		editDescriptionButton.setText("Edit");
		editDescriptionButton.setBorderPainted(false);
		editDescriptionButton.setContentAreaFilled(false);
		editDescriptionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		nameTF.setEditable(false);
		nameTF.setBorder(null);

		invalidValueTF.setEditable(false);
		invalidValueTF.setBorder(null);

		waitTimeTF.setEditable(false);
		waitTimeTF.setBorder(null);

		descriptionTA.setEditable(false);
		descriptionTA.setColumns(20);
		descriptionTA.setRows(5);
		descriptionTA.setBorder(null);
		jScrollPane2.setViewportView(descriptionTA);

		quantityLabel.setText("Quantity");

		quantityTextField.setEditable(false);

		typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "integer", "double", "binary" }));

		saveButton.setText("Save");

		toLabel.setText("to");

		secondInvalidValueTextField.setBackground(new java.awt.Color(240, 240, 240));
		secondInvalidValueTextField.setBorder(null);

		removeButton.setText("Remove");

		editVariables.setText("Edit");
		generateButton.setEnabled(false);

		saveButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

				loadFile.delete();
				xmlOperations.writeXML(nameTF.getText(), model, descriptionTA.getText(), waitTimeTF.getText(), invalidValueTF.getText(), secondInvalidValueTextField.getText());				
			}
		});

		editWaitTimeButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(waitTimeTF.isEditable()) {
					editWaitTimeButton.setText("Edit");
					waitTimeTF.setEditable(false);
					waitTimeTF.setBackground(new Color(240,240,240));
				} else {
					editWaitTimeButton.setText("OK");
					waitTimeTF.setEditable(true);
					waitTimeTF.setBackground(new Color(255,255,255));
				}				
			}
		});

		editNameButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(nameTF.isEditable()) {
					editNameButton.setText("Edit");
					nameTF.setEditable(false);
					nameTF.setBackground(new Color(240,240,240));
				} else {
					editNameButton.setText("OK");
					nameTF.setEditable(true);
					nameTF.setBackground(new Color(255,255,255));
				}
			}
		});

		editInvalidValueButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(invalidValueTF.isEditable()) {
					editInvalidValueButton.setText("Edit");
					invalidValueTF.setEditable(false);
					invalidValueTF.setBackground(new Color(240,240,240));
					secondInvalidValueTextField.setEditable(false);
					secondInvalidValueTextField.setBackground(new Color(240,240,240));
				} else {
					editInvalidValueButton.setText("OK");
					invalidValueTF.setEditable(true);
					invalidValueTF.setBackground(new Color(255,255,255));
					secondInvalidValueTextField.setEditable(true);
					secondInvalidValueTextField.setBackground(new Color(255,255,255));
				}

			}
		});

		editDescriptionButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(descriptionTA.isEditable()) {
					editDescriptionButton.setText("Edit");
					descriptionTA.setEditable(false);
					descriptionTA.setBackground(new Color(240,240,240));
				} else {
					editDescriptionButton.setText("OK");
					descriptionTA.setEditable(true);
					descriptionTA.setBackground(new Color(255,255,255));
				}
			}
		});

		editVariables.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if(variableNameTF.isEditable()) {
					generateButton.setEnabled(false);
					editVariables.setText("Edit");
					variableNameTF.setEditable(false);
					variableMinValueTF.setEditable(false);
					variableMaxValueTF.setEditable(false);
					quantityTextField.setEditable(false);
					variableNameTF.setBackground(new Color(240,240,240));
					variableMinValueTF.setBackground(new Color(240,240,240));
					variableMaxValueTF.setBackground(new Color(240,240,240));
					quantityTextField.setBackground(new Color(240,240,240));
				} else {
					generateButton.setEnabled(true);
					editVariables.setText("OK");
					variableNameTF.setEditable(true);
					variableMinValueTF.setEditable(true);
					variableMaxValueTF.setEditable(true);
					quantityTextField.setEditable(true);
					variableNameTF.setBackground(new Color(255,255,255));
					variableMinValueTF.setBackground(new Color(255,255,255));
					variableMaxValueTF.setBackground(new Color(255,255,255));
					quantityTextField.setBackground(new Color(255,255,255));

				}
			}
		});

		generateButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				createVariables();

			}
		});

		removeButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				deleteVariable();				
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
										.addGap(24, 24, 24)
										.addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addComponent(editDescriptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
										.addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(layout.createSequentialGroup()
														.addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(layout.createSequentialGroup()
														.addGap(14, 14, 14)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
																.addComponent(variableNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addComponent(varTypeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(layout.createSequentialGroup()
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(varMaxLabel)
																.addComponent(varMinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(quantityLabel))))
										.addGap(18, 18, 18)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(layout.createSequentialGroup()
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
																.addComponent(typeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addComponent(variableNameTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGap(30, 30, 30)
														.addComponent(editVariables, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(variableMinValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(variableMaxValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
										.addGap(38, 38, 38)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(layout.createSequentialGroup()
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
																.addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addComponent(invalidValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGap(18, 18, 18)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGroup(layout.createSequentialGroup()
																		.addComponent(invalidValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(toLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(secondInvalidValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(editInvalidValueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGroup(layout.createSequentialGroup()
																		.addComponent(editNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(47, 47, 47)
																		.addComponent(waitTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(waitTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(editWaitTimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
						.addContainerGap(37, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addGap(22, 22, 22)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(editNameButton)
								.addComponent(waitTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(waitTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(editWaitTimeButton))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(invalidValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(invalidValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(toLabel)
										.addComponent(secondInvalidValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(editInvalidValueButton))
						.addGap(14, 14, 14)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(variableNameLabel)
												.addComponent(variableNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(editVariables))
										.addGap(14, 14, 14)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(varTypeLabel)
												.addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(varMinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(variableMinValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(2, 2, 2)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(varMaxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(variableMaxValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(generateButton)
								.addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(removeButton))
						.addGap(24, 24, 24)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(layout.createSequentialGroup()
										.addGap(24, 24, 24)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(editDescriptionButton))))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
						.addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap())
				);
	}// </editor-fold>//GEN-END:initComponents

	public void createVariables() {
		int variableQuantityInteger = Integer.parseInt(quantityTextField.getText());
		for(int i = 0; i <  variableQuantityInteger ; i++) {
			variableCounter++;
			model.addRow(new Object[]{variableNameTF.getText()+" "+variableCounter,typeComboBox.getSelectedItem(),variableMinValueTF.getText(),variableMaxValueTF.getText()});	   		
		} 	
	}

	public void deleteVariable() {
		if(variablesTable.getRowCount() > 0) {
			int selectedRow = variablesTable.getSelectedRow();
			model.removeRow(selectedRow);
		}
	}



	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel descriptionLabel;
	private javax.swing.JTextArea descriptionTA;
	private javax.swing.JButton editDescriptionButton;
	private javax.swing.JButton editInvalidValueButton;
	private javax.swing.JButton editNameButton;
	private javax.swing.JButton editVariables;
	private javax.swing.JButton editWaitTimeButton;
	private javax.swing.JButton generateButton;
	private javax.swing.JLabel invalidValueLabel;
	private javax.swing.JTextField invalidValueTF;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel nameLabel;
	private javax.swing.JTextField nameTF;
	private javax.swing.JLabel quantityLabel;
	private javax.swing.JTextField quantityTextField;
	private javax.swing.JButton removeButton;
	private javax.swing.JButton saveButton;
	private javax.swing.JTextField secondInvalidValueTextField;
	private javax.swing.JLabel toLabel;
	private javax.swing.JComboBox<String> typeComboBox;
	private javax.swing.JLabel varMaxLabel;
	private javax.swing.JLabel varMinLabel;
	private javax.swing.JLabel varTypeLabel;
	private javax.swing.JTextField variableMaxValueTF;
	private javax.swing.JTextField variableMinValueTF;
	private javax.swing.JLabel variableNameLabel;
	private javax.swing.JTextField variableNameTF;
	private javax.swing.JTable variablesTable;
	private javax.swing.JLabel waitTimeLabel;
	private javax.swing.JTextField waitTimeTF;
	// End of variables declaration//GEN-END:variables

	private javax.swing.table.DefaultTableModel model;


}